defmodule Advent do
  def fuel_per_mass(mass_list) do
    Enum.map(mass_list, fn x -> fuel_for(x) end)
  end

  def fuel_for(mass) do
    trunc(mass / 3) - 2
  end

  def total_fuel_only_for_mass(mass_list) do
    Enum.sum(fuel_per_mass(mass_list))
  end

  def fuel_required_for_fuel(mass_list) do
    Enum.map(mass_list, fn x -> fuel_per_fuel(x) end)
  end

  def fuel_per_fuel(fuel_mass) do
    if trunc(fuel_mass / 3 - 2) > 0 do
      trunc(fuel_mass / 3 - 2) + fuel_per_fuel(trunc(fuel_mass / 3 - 2))
    else
      0
    end
  end

  def total_fuel_for_mass_and_fuel(mass_list) do
    Enum.sum(fuel_required_for_fuel(mass_list))
  end
end

IO.puts("Total fuel required only for mass:")

IO.puts(
  Advent.total_fuel_only_for_mass([
    68884,
    100_920,
    114_424,
    139_735,
    103_685,
    133_067,
    77650,
    77695,
    85927,
    108_144,
    131_312,
    97795,
    83234,
    61637,
    137_735,
    126_903,
    71037,
    58593,
    54510,
    66117,
    54164,
    60761,
    128_623,
    52359,
    55458,
    145_494,
    57319,
    98478,
    110_008,
    86620,
    103_271,
    86924,
    116_773,
    87534,
    102_462,
    119_945,
    126_017,
    84706,
    129_840,
    97831,
    136_000,
    79667,
    133_831,
    92793,
    148_917,
    75262,
    129_853,
    60513,
    89914,
    79584,
    64229,
    124_145,
    127_684,
    142_628,
    52734,
    130_649,
    87191,
    126_500,
    137_058,
    109_782,
    108_641,
    102_147,
    132_881,
    119_065,
    58999,
    62462,
    105_232,
    79743,
    127_994,
    143_392,
    61072,
    59375,
    57361,
    128_021,
    101_544,
    135_661,
    135_469,
    51693,
    103_286,
    146_654,
    97886,
    133_910,
    71306,
    147_224,
    73771,
    91292,
    116_892,
    116_906,
    107_424,
    68283,
    100_285,
    105_709,
    120_370,
    92931,
    146_706,
    131_745,
    101_710,
    85089,
    98788,
    116_232
  ])
)

IO.puts("Total fuel required for mass and its own fuel:")

IO.puts(
  Advent.total_fuel_for_mass_and_fuel([
    68884,
    100_920,
    114_424,
    139_735,
    103_685,
    133_067,
    77650,
    77695,
    85927,
    108_144,
    131_312,
    97795,
    83234,
    61637,
    137_735,
    126_903,
    71037,
    58593,
    54510,
    66117,
    54164,
    60761,
    128_623,
    52359,
    55458,
    145_494,
    57319,
    98478,
    110_008,
    86620,
    103_271,
    86924,
    116_773,
    87534,
    102_462,
    119_945,
    126_017,
    84706,
    129_840,
    97831,
    136_000,
    79667,
    133_831,
    92793,
    148_917,
    75262,
    129_853,
    60513,
    89914,
    79584,
    64229,
    124_145,
    127_684,
    142_628,
    52734,
    130_649,
    87191,
    126_500,
    137_058,
    109_782,
    108_641,
    102_147,
    132_881,
    119_065,
    58999,
    62462,
    105_232,
    79743,
    127_994,
    143_392,
    61072,
    59375,
    57361,
    128_021,
    101_544,
    135_661,
    135_469,
    51693,
    103_286,
    146_654,
    97886,
    133_910,
    71306,
    147_224,
    73771,
    91292,
    116_892,
    116_906,
    107_424,
    68283,
    100_285,
    105_709,
    120_370,
    92931,
    146_706,
    131_745,
    101_710,
    85089,
    98788,
    116_232
  ])
)
